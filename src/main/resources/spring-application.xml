<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
			 xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.1.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-4.1.xsd     
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
			 default-lazy-init="false">
 
<!-- 定时器开关 开始 -->
	<task:annotation-driven />
	<!-- 标注类型 的事务配置 如果使用注解事务。就放开
	<tx:annotation-driven />-->

	<!-- 扫描serviceImpl的bean -->
	<context:component-scan base-package="com.supervise.serviceImpl"/>
	<!-- 扫描@Configuration的bean -->
	<context:component-scan base-package="com.supervise.config"/>
	
	<!-- 统一异常处理方式 -->
	<bean id="exceptionHandler" class="com.supervise.exception.MyExceptionHandler"/>
	<!-- 初始化数据 -->
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
				 <property name ="locations">
						 <list>
							<value>classpath:jdbc.properties</value>
						 </list>
				 </property>
				 <property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="hengdao@bp" />
			<property name="driverClassName" value="${jdbc.driverClass}" />
	</bean>
	
	<!--<bean id="pagePlugin" class="com.supervise.common.util">-->
		<!--<property name="properties">-->
			<!--<props>-->
				<!--<prop key="dialect">mysql</prop>-->
				<!--<prop key="pageSqlId">.*query.*</prop>-->
			<!--</props>-->
		<!--</property>-->
	<!--</bean>-->

	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--&lt;!&ndash; 自动匹配Mapper映射文件 &ndash;&gt;-->
		<!--<property name="mapperLocations" value="classpath:mappings/*-mapper.xml"/>-->
		<!--<property name="typeAliasesPackage" value="com.numberONe.entity"/>-->
		<!--<property name="plugins">-->
			<!--<array>-->
				<!--<ref bean="pagePlugin" />-->
			<!--</array>-->
		<!--</property>-->
	<!--</bean>-->
	<!--&lt;!&ndash; 通过扫描的模式，扫描目录在com.numberONe.mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 &ndash;&gt;-->
	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
		<!--<property name="basePackage" value="com.numberONe.mapper" />-->
	<!--</bean>-->

	<!-- Entity Manager -->
	<bean id="entityManagerFactory"
				class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="supervise" />
		<!-- 指定Entity实体类包路径 -->
		<property name="packagesToScan" >
			<array>
				<value>com.supervise.domain</value>
			</array>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			</bean>
		</property>
	</bean>

	<!-- Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Jpa Repositories -->
	<jpa:repositories base-package="com.supervise.domain" entity-manager-factory-ref="entityManagerFactory"
										transaction-manager-ref="transactionManager"></jpa:repositories>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- 事务配置 -->
	<!--<bean id="transactionManager"-->
		<!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->
	<!-- <aop:config>
		<aop:pointcut
			expression="execution(public * com.numberONe.controller.*(..))"
			id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="logicDelById" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice> -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> 
	 <bean id="log4jHandlerAOP" class="com.numberONe.logAop.LogAopAction"></bean> 
		<aop:config proxy-target-class="true">
		    <aop:aspect id="logAspect" ref="log4jHandlerAOP"> 
		    <aop:pointcut id="logPointCut" expression="execution(* org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(..))" /> 
		    <aop:around method="logAll" pointcut-ref="logPointCut" /> </aop:aspect> 
		</aop:config> -->
	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<context:component-scan base-package="com.supervise.task" />
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />
</beans>
